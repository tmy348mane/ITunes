{"version":3,"sources":["Card.js","Cardview.js","App.js","reportWebVitals.js","index.js"],"names":["Card","className","this","props","artistName","src","img","alt","trackName","shape","onClick","e","showPreview","id","style","textDecoration","color","to","Component","Cardview","Layout","Sider","Content","Header","artist","artworkUrl100","App","state","collection","artistPrev","onChange","bind","onSubmit","setState","target","value","event","preventDefault","console","log","url1","URL","params","term","search","URLSearchParams","fetch","then","data","json","results","prev","find","ar","artistId","cards","map","name","short","shortDescription","fontSize","backgroundColor","height","placeholder","bordered","width","borderBottom","position","top","right","type","htmlType","icon","SearchOutlined","exact","path","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d538e6c3.chunk.js","sourcesContent":["import { Button } from \"antd\";\nimport React, { Component } from \"react\";\nimport \"./Card.css\";\nimport {Link} from \"../node_modules/react-router-dom\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"cardContainer\">\n        <div className=\"card\">\n          <h3 className=\"title\">{this.props.artistName}</h3>\n         \n          <img className=\"img\" src={this.props.img} alt=\"Artist Image\" />\n          <h4 className=\"track\">{this.props.trackName}</h4>\n          <div className=\"emptybarOne\"></div>\n          <button className=\"preview\" shape=\"round\" onClick={(e)=>this.props.showPreview(e,this.props.id)} ><Link style={{ textDecoration: \"none\", color: \"grey\" }} to=\"/preview\">Preview</Link></button>\n          {/* <h4 className=\"short\">{this.props.short}</h4> */}\n          <div className=\"bar\">\n            <div className=\"emptybar\"></div>\n            <div className=\"filledbar\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\r\nimport { Layout, Input, Menu, Button } from \"antd\";\r\nimport Card from \"./Card\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport \"../node_modules/antd/dist/antd.css\";\r\nconst { Sider, Content, Header } = Layout;\r\n\r\nexport default class Cardview extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Layout>\r\n            {/* <Sider>\r\n            <h1 style={{ fontSize: \"20px\", color: \"white\" }}>Slider</h1>\r\n            {/* <Menu\r\n              style={{\r\n                width: \"100%\",\r\n                position: \"relative\",\r\n                color: \"darkgrey\",\r\n                top: \"5em\",\r\n                backgroundColor: \"#E43F5A\",\r\n              }}\r\n              defaultSelectedKeys={[\"1\"]}\r\n              defaultOpenKeys={[\"sub1\"]}\r\n            >\r\n              <Menu.Item\r\n                style={{ padding: \"10px\", textAlign: \"center\" }}\r\n                key=\"1\"\r\n              >\r\n                Navigation One\r\n              </Menu.Item>\r\n              <Menu.Item style={{ padding: \"10px\" }} key=\"2\">\r\n                Navigation Two\r\n              </Menu.Item>\r\n              <Menu.Item style={{ padding: \"10px\" }} key=\"3\">\r\n                Navigation Three\r\n              </Menu.Item>\r\n              <Menu.Item style={{ padding: \"10px\" }} key=\"5\">\r\n                Navigation Four\r\n              </Menu.Item>\r\n              <Menu.Item style={{ padding: \"10px\" }} key=\"6\">\r\n                Navigation Five\r\n              </Menu.Item>\r\n            </Menu> \r\n          </Sider> */}\r\n          <Layout>\r\n            {/* <Header>\r\n              <h1 style={{ \"fontSize\": \"30px\", color: \"white\" }}>\r\n                ITunes Music\r\n              </h1>\r\n            </Header> */}\r\n\r\n            {/* <Layout style={{ backgroundColor: \"#121212\", height: \"100px\" }}>\r\n              <div className=\"serach\">\r\n                <form onSubmit={this.onSubmit}>\r\n                  <Input\r\n                    placeholder=\"search\"\r\n                    bordered={false}\r\n                    style={{\r\n                      width: \"500px\",\r\n                      borderBottom: \"3px solid #E43F5A\",\r\n                      height: \"45px\",\r\n                      color: \"white\",\r\n                      position: \"relative\",\r\n                      top: \"25px\",\r\n                    }}\r\n                    // value={this.state.artist}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  <Button style={{\r\n                    position: \"relative\",\r\n                    top: \"22px\", right: \"40px\"\r\n                  }} type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                </form>\r\n              </div>\r\n            </Layout> */}\r\n            <div className=\"cardContainer\">\r\n        <div className=\"card\">\r\n          <h3 className=\"title\">{this.props.artist.artistName}</h3>\r\n         \r\n          <img className=\"img\" src={this.props.artist.artworkUrl100} alt=\"Artist Image\" />\r\n          <h4 className=\"track\">{this.props.artist.trackName}</h4>\r\n          <div className=\"emptybarOne\"></div>\r\n          <div className=\"bar\">\r\n            <div className=\"emptybar\"></div>\r\n            <div className=\"filledbar\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n          </Layout>\r\n\r\n\r\n            </Layout>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import \"./App.css\";\nimport { Layout, Input, Menu, Button } from \"antd\";\nimport Card from \"./Card\";\nimport { SearchOutlined } from '@ant-design/icons';\nimport React from \"react\";\nimport {  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link} from \"../node_modules/react-router-dom\";\nimport \"../node_modules/antd/dist/antd.css\";\nimport Cardview from \"./Cardview\";\nconst { Sider, Content, Header } = Layout;\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      collection: [],\n      artist: \"\",\n      artistPrev:[]\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.showPreview=this.showPreview.bind(this);\n  }\n  onChange(e) {\n    this.setState(\n      {\n        artist: e.target.value,\n      });\n  }\n  onSubmit(event) {\n    event.preventDefault();\n    console.log(\"Inside Submit\");\n    const url1 = new URL(\n      \"https://itunes.apple.com/search\"\n    );\n    const search = this.state.artist;\n    const params = { term: search };\n    url1.search = new URLSearchParams(params);\n    fetch(url1)\n      .then(function (data) {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState(\n          {\n            collection: data.results,\n          },\n          () => {\n            console.log(this.state.collection);\n          }\n        );\n      });\n\n  }\n  showPreview(e,id){\n\n    console.log(\"Id \" + id);\n    const prev=this.state.collection.find(ar=>\n      ar.artistId===id );\n      console.log(\"Before set State\"+ prev);\n      this.setState({\n        artistPrev:prev\n      },console.log(this.state.artistPrev));\n\n  }\n\n\n  render() {\n    const cards = this.state.collection.map((collection) => {\n      return (\n        <Card  showPreview={this.showPreview} img={collection.artworkUrl100} id={collection.artistId} name={collection.artistName} trackName={collection.trackName} artistName={collection.artistName} short={collection.shortDescription} />\n      );\n    });\n    return (\n      <Router>\n      <div className=\"App\">\n        <Layout>\n          <Sider>\n            <h1 style={{ fontSize: \"20px\", color: \"white\" }}>Slider</h1>\n            {/* <Menu\n              style={{\n                width: \"100%\",\n                position: \"relative\",\n                color: \"darkgrey\",\n                top: \"5em\",\n                backgroundColor: \"#E43F5A\",\n              }}\n              defaultSelectedKeys={[\"1\"]}\n              defaultOpenKeys={[\"sub1\"]}\n            >\n              <Menu.Item\n                style={{ padding: \"10px\", textAlign: \"center\" }}\n                key=\"1\"\n              >\n                Navigation One\n              </Menu.Item>\n              <Menu.Item style={{ padding: \"10px\" }} key=\"2\">\n                Navigation Two\n              </Menu.Item>\n              <Menu.Item style={{ padding: \"10px\" }} key=\"3\">\n                Navigation Three\n              </Menu.Item>\n              <Menu.Item style={{ padding: \"10px\" }} key=\"5\">\n                Navigation Four\n              </Menu.Item>\n              <Menu.Item style={{ padding: \"10px\" }} key=\"6\">\n                Navigation Five\n              </Menu.Item>\n            </Menu> */}\n          </Sider>\n          <Layout>\n            <Header>\n              <h1 style={{ \"fontSize\": \"30px\", color: \"white\" }}>\n                ITunes Music\n              </h1>\n            </Header>\n\n            <Layout style={{ backgroundColor: \"#121212\", height: \"100px\" }}>\n              <div className=\"serach\">\n                <form onSubmit={this.onSubmit}>\n                  <Input\n                    placeholder=\"search\"\n                    bordered={false}\n                    style={{\n                      width: \"500px\",\n                      borderBottom: \"3px solid #E43F5A\",\n                      height: \"45px\",\n                      color: \"white\",\n                      position: \"relative\",\n                      top: \"25px\",\n                    }}\n                    value={this.state.artist}\n                    onChange={(e) => this.onChange(e)}\n                  />\n                  <Button style={{\n                    position: \"relative\",\n                    top: \"22px\", right: \"40px\"\n                  }} type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} />\n                </form>\n              </div>\n            </Layout>\n            <Content>{cards}</Content>\n          </Layout>\n        </Layout>\n        <Switch>\n          <Route exact path=\"/preview\">\n            <Cardview artist={this.state.artistPrev}></Cardview>\n          </Route>\n        </Switch>\n\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}